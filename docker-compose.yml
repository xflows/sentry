# NOTE: This docker-compose.yml is meant to be just an example of how
# you could accomplish this on your own. It is not intended to work in
# all use-cases and must be adapted to fit your needs. This is merely
# a guideline.

# See docs.getsentry.com/on-premise/server/ for full
# instructions

version: '3.7'

x-defaults: &defaults
  restart: unless-stopped
  build: .
  depends_on:
    - redis
    - postgres
    - memcached
  env_file: .env
  environment:
    SENTRY_MEMCACHED_HOST: memcached
    SENTRY_REDIS_HOST: redis
    SENTRY_POSTGRES_HOST: postgres
  volumes:
    - ./sentry-data:/var/lib/sentry/files


services:
  memcached:
    restart: unless-stopped
    image: memcached:1.5-alpine

  redis:
    restart: unless-stopped
    image: redis:3.2-alpine

  postgres:
    restart: unless-stopped
    image: postgres:9.5-alpine
    volumes:
      - ./sentry-postgres:/var/lib/postgresql/data
    expose:
      - 5432

  sentry:
    <<: *defaults
    expose:
      - 9000
    networks:
      - web
      - default
    labels:
      - traefik.enable=true
      - traefik.http.routers.backend.entrypoints=websecure
      - traefik.http.routers.backend.rule=Host(`kt-clowdflows2.ijs.si`)
      - traefik.http.routers.backend.tls.certresolver=myresolver

  cron:
    <<: *defaults
    command: run cron

  worker:
    <<: *defaults
    command: run worker

networks:
  web:
    external: true
